<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Lyza Danger Gardner: everything]]></title><description><![CDATA[Developer and Person]]></description><link>http://www.lyza.com</link><generator>RSS for Node</generator><lastBuildDate>Fri, 23 Mar 2018 16:23:39 GMT</lastBuildDate><atom:link href="http://www.lyza.com/feeds/rss.rss" rel="self" type="application/rss+xml"/><pubDate>Fri, 23 Mar 2018 16:23:37 GMT</pubDate><language><![CDATA[en-US]]></language><managingEditor><![CDATA[Lyza Danger Gardner]]></managingEditor><webMaster><![CDATA[Lyza Danger Gardner]]></webMaster><item><title><![CDATA[Great Dev Boards: An Ode to the Adafruit Feather M0]]></title><description><![CDATA[<p><a href="https://www.manning.com/books/javascript-on-things"><img src="js-on-things.png" alt="JavaScript on Things: Hardware for Web Developers by Lyza Danger Gardner" class="Pull--left" /></a></p>
<p><em>As part and parcel of writing my book</em> (<a href="https://www.manning.com/books/javascript-on-things">JavaScript on Things, Manning</a> ) <em>and scratching the curiosity-itches of my hardware-hacking hobbies, I’ve had my hands on scads of different hardware platforms and components over the past year and more. This series of articles contain a collection of opinions and recommendations based on my experiences as they relate to two focus areas: electronics for beginners and JavaScript-controlled hardware.</em></p>
<p>This post’s electronics experience rating: INTERMEDIATE-PLUS</p>
<hr>
<p>In a <a href="/2017/07/07/i-am-a-hardware-beginner-which-dev-board-should-i-get/">previous post</a>, I identified two standout development boards for beginners. In this one, I highlight a couple of boards that have surprised me by becoming some of my very favorites.</p>
<p>My introduction to Adafruit’s family of Feather boards wasn’t auspicious: while trying to cobble together a little network of LoRA radios (maybe I’ll talk about this more in-depth sometime as a case-study of Never, Ever, Ever Give Up; maybe it’s just too embarrassing), I feverishly ordered several Feathers from Adafruit, amazed that you could buy a tidily-packaged board with microcontroller and LoRA module for ONLY TWENTY DOLLARS.</p>
<p><img src="adafruit-feather-site.png" alt="Adafruit&#39;s Feather line of dev boards"></p>
<p><em>Image: Adafruit Feather dev boards on their website.</em></p>
<p>Actually, you can’t. Tripped up by similar product names, I ended up ordering <a href="https://www.adafruit.com/product/3231">these boards with only the radio module on them</a>, thinking they were <a href="https://www.adafruit.com/product/3178">these $35 boards that actually have a freaking MCU on them, which is highly useful if you actually want to use the radio somehow</a>.</p>
<p>During a protracted evening unboxing it dawned on me that the newly-arrived boards looked rather…minimal. I traveled several miles of self-hate that evening. By this point, the $35 ones with the MCU were sold the hell out, so I scrambled to find another Feather model that I could use to control the first set (it’s Feathers all the way down, ol’ chap).</p>
<p>This time: I ended up with some <a href="https://www.adafruit.com/product/2771">32u4 Basic Proto</a> boards that I wanted to stack with the brainless LoRA Feathers.</p>
<p>Won over I was not. The (limited) <a href="https://learn.adafruit.com/assets/41528">pin layout</a> seemed a tad cruel. What’s worse, only four pins have interrupt support and those pins are also the only pins that support TX, RX, SDA and SCL, a rather project-ending bummer when you’re building something that involves serial logging of I^2C sensor readings. Also awesome when I’d already soldered fly wires on the radio-only modules in a 32u4-specific fashion. Three cheers for desoldering wick and chagrin.</p>
<p>A few table-flips later I ultimately netted a small stack of the <a href="https://www.adafruit.com/product/2772">Feather M0 Proto</a> boards. Now a few hundred bucks down the Feather rabbit hole, I was steeled for rueful-ironic laughter. And, yet. What is this? These boards fundamentally <em>do not suck</em>. In fact, they’re pretty great!</p>
<p><img src="adafruit-feather-m0.png" alt="Adafruit Feather M0 Basic Proto"></p>
<p><em>Image: Adafruit Feather M0 Basic Proto. Source: Adafruit website.</em></p>
<h2 id="feather-features-i-like">Feather Features I Like</h2>
<p>There are some features common to many (if not all) Feathers that I didn’t get the joy of experiencing in my initial raging failfires but came to enjoy them once I had my M0s in hand.</p>
<p>I like the boards’ power options. You can plug ‘em into USB power, natch, but you can also attach a LiPo battery to the already-attached-and-waiting-for-yah JST connector and it <em>just works</em>. It’ll charge when on USB power, automatically prefer USB power when plugged in, then automatically switch over to LiPo power when disconnected. This is all kinds of convenient and awesome.</p>
<p>The consistency and commitment to the Feather form factor is handy if you want to stack or otherwise mix boards. There are a number of header arrangements you can choose between. I’d love to see a project that just keeps stacking Feathers on Feathers on Feathers…</p>
<p>Also, minor detail but one close to my heart: the pinout diagrams for the Feathers are clear and well-designed. Just lovely.</p>
<p><img src="m0_pinout.png" alt="Feather M0 pinout diagram"></p>
<p><em>Image: The M0 pinout diagram is clear and easy to read.</em> <a href="https://cdn-learn.adafruit.com/assets/assets/000/030/920/original/2772_pinout_v1_0.pdf?1457305622">Go see it full size</a>. <em>Credit: Adafruit.</em></p>
<h2 id="m0-features-i-like">M0 Features I Like</h2>
<p>I’m going to keep calling the Feather’s MCU the M0, because its actual naming flourishes surpass racehorses/members of the Hapsburg royal dynasty (feast on it: “Atmel® | SMART SAM D ARM® Cortex®-M0+ based microcontroller (MCU) “).</p>
<p>The M0 is a great little friend. Tons of pins, interrupts everywhere, PWM like it’s going out of style, and a not-too-hard-to-mess-with SERCOM for adding/munging serial interfaces (want all six serial modules to be SPI? You can probably do that). Quick compared to the ATmega32u4, with more Flash, more megahertzles, yet still low-power.</p>
<p>Coupled with the little Feather form factor it makes a pleasing platform. Not bad to work with to do Arduino-compatible stuff, once the finicky little bits of IDE/board support are done.</p>
<p>The only un-work-aroundable thing I ran into was a bug in the M0-specific Arduino Wire library (probably?) that made it <a href="https://forums.adafruit.com/viewtopic.php?f=24&amp;t=111541">impossible to use these boards as I^2C slaves</a> (as master, the more typical setup anyway, they’re fine). One day maybe I’ll go check on the status of that bug.</p>
<p>Anyway, I like this board. Which is funny because I had to go through much pain to find it.</p>
]]></description><link>http://www.lyza.com/2017/07/26/great-dev-boards-an-ode-to-the-adafruit-feather-m0/</link><guid isPermaLink="true">http://www.lyza.com/2017/07/26/great-dev-boards-an-ode-to-the-adafruit-feather-m0/</guid><category><![CDATA[tech]]></category><category><![CDATA[JSoT]]></category><pubDate>Wed, 26 Jul 2017 17:43:12 GMT</pubDate></item><item><title><![CDATA[Hat Tip to Conference Video Art]]></title><description><![CDATA[<p>From time to time, we celebrate certain conference videos—usually the kind that show a speaker and some slides in a humorous or educational harmony. But I’ve also started noticing how high quality some of the intra-conference production can be, like the short video intros that are played between sessions. I’d like to share two from the past year that I thought were too good to be relegated to the cobwebby annals of forgotten conference collateral.</p>
<h2 id="smashing-conf-nyc-2017">Smashing Conf NYC 2017</h2>
<p>In Marc Costa’s <a href="https://vimeo.com/220945744">intro video for Smashing Conf NYC 2017</a>, different materials are laser-cut, twisted, bounced and folded into representations of speaker names, making strong use of the third dimension. It’s an artful melding of the technical and the tangible. While each individual composition is handsome, it’s the entire collection together that feels sublime.</p>
<p><a href="https://vimeo.com/220945744">
<img src="still.png" alt="Still from Smashing Conf NYC 2017 intro video, by Marc Costa">
</a></p>
<p><em>A still from Marc Costa’s Smashing Conf 2017 intro video. <a href="https://vimeo.com/220945744">Watch it on Vimeo</a></em></p>
<h2 id="generate-conf-2016-sfo">Generate Conf 2016, SFO</h2>
<p><a href="https://www.youtube.com/watch?v=MsTbwflWXKI">CreativeBloq’s intro video for it’s 2016 San Francisco Generate conference</a> is all digital, but the animation is inventive, dimensional and kinetic. And I happen to be a fan of the energy of the music.</p>
<p><a href="https://www.youtube.com/watch?v=MsTbwflWXKI">
<img src="generate.png" alt="Still from CreativeBloq&#39;s 2016 SFO Generate intro">
</a></p>
<p><em>It is awfully fun watching my own name unfurl! <a href="https://www.youtube.com/watch?v=MsTbwflWXKI">Watch it on YouTube</a></em></p>
]]></description><link>http://www.lyza.com/2017/07/11/hat-tip-to-conference-video-art/</link><guid isPermaLink="true">http://www.lyza.com/2017/07/11/hat-tip-to-conference-video-art/</guid><category><![CDATA[tech]]></category><category><![CDATA[events]]></category><category><![CDATA[speaking]]></category><pubDate>Tue, 11 Jul 2017 19:41:13 GMT</pubDate></item><item><title><![CDATA[I am a Hardware Beginner: Which Dev Board Should I Get?]]></title><description><![CDATA[<p><a href="https://www.manning.com/books/javascript-on-things"><img src="js-on-things.png" alt="JavaScript on Things: Hardware for Web Developers by Lyza Danger Gardner" class="Pull--left" /></a></p>
<p><em>As part and parcel of writing my book</em> (<a href="https://www.manning.com/books/javascript-on-things">JavaScript on Things, Manning</a> ) <em>and scratching the curiosity-itches of my hardware-hacking hobbies, I’ve had my hands on scads of different hardware platforms and components over the past year and more. This series of articles contain a collection of opinions and recommendations based on my experiences as they relate to two focus areas: electronics for beginners and JavaScript-controlled hardware.</em></p>
<p>This post’s electronics experience rating: ABSOLUTE BEGINNER</p>
<hr>
<p>A question I field often is: “What kind of board should I buy to learn how to do this stuff? Where do I start, hardware-wise?” And there are two boards I tend to recommend, in the end—which is why they figure so prominently in <a href="https://www.manning.com/books/javascript-on-things">my book</a> (Don’t worry, I’ve provided some other educational links for each in case my shameless plug is…shameless).</p>
<h2 id="what-s-a-development-board-">What’s a Development Board?</h2>
<p>Let’s not go off half-cocked with a major undefined or vague term. What’s a development board, anyway? In my book I use the following definition:</p>
<blockquote>
<p><em>Development boards</em>, also called <em>prototyping boards</em> or just <em>boards</em>, are physical development platforms that combine a microcontroller or other processing component with useful supporting features. They are the bread and butter of the hardware-hacking lifestyle. Boards range in cost from just a few bucks to over $100 for high-end [Single-Board Computers, a.k.a.] SBCs.</p>
<p>Boards are centered around their brain, a combination of processor, memory and I/O. 8- or 16-bit microcontrollers are at the center of  straightforward, entry-level prototyping boards like (most) Arduinos. Boards with more sophisticated, 32-bit microcontrollers may be able to run embedded JavaScript.</p>
</blockquote>
<p>When setting off on a learn-electronics journey, choosing a board is a solid first step. It’ll determine the trajectory of your explorations.</p>
<p><img src="dev-boards.jpg" alt="A selection of development boards. Clockwise from top left: Texas Instruments Launch Pad, Arduino Uno R3, Adafruit Trinket 5V, Particle Photon"></p>
<p><em>Photo: A selection of development boards. Clockwise from top left: Texas Instruments Launch Pad, Arduino Uno R3, Adafruit Trinket 5V, Particle Photon</em></p>
<h2 id="ideal-things-for-a-beginner">Ideal Things for a Beginner</h2>
<p>Features that make a development board ideal for beginners include clarity, constraints and ubiquity. Put another way, good dev boards for n00bs have simple, obvious features and are used by a whole crapload of folks.</p>
<h3 id="clear-intuitive-features">Clear, Intuitive Features</h3>
<p>A good beginner dev board should support a reasonable set of I/O features (note: this is usually dictated by what features the board’s microcontroller can support). Different <em>pins</em> on the board support different features, which should include—at the least—digital I/O, analog input, PWM (pulse-width modulation), ADC (analog-to-digital conversion) and serial support (including I<sup>2</sup>C and SPI). Don’t worry a tick if you haven’t heard of any or all of those things yet.</p>
<p>Pins should be sensibly laid out and named (or, often, numbered). Many boards have pin numbering and capability information helpfully <em>silkscreened</em> onto the board itself. A board with missing key features, nonsensical pin layout or a confusing pinout diagram can make you wish you hadn’t bothered.</p>
<p><img src="uno-silkscreen.jpg" alt="Detail of Arduino Uno R3 showing silkscreened pin information"></p>
<p><em>Photo: Detail of the Arduino Uno (R3) board showing silkscreened pin numbers.</em></p>
<h3 id="constraints">Constraints</h3>
<p>The more things you can do with a dev board, the more distracted you can get. While a juiced-up microcontroller, or more flash memory for your programs, or additional peripherals and goodies sound tempting, they’re also potentially pits to wallow in and get overwhelmed.</p>
<p>Limits to the oomph of your first dev board can paradoxically be freeing, allowing you to zero in on the fundamentals of electronics hackery without suffering from the angst of overchoice.</p>
<p>For example, despite their popularity, I’d recommend against the Raspberry Pi family for introductory electronics explorations.  <em>So much</em> is possible with the Pi platform that it can be distracting and overwhelming if you want to focus on electronics fundamentals for a bit.</p>
<p>Also, Pis fall short in feature complement: while they certainly have some on-board I/O capabilities, their convoluted pin numbering, limited PWM (pulse-width modulation) support and complete lack of ADC (analog-to-digital conversion) makes introductory I/O hackery potentially confusing and frustrating.</p>
<p>An aside, though: If you want to tinker around with projects that make use of the Pi’s general-computing powers—for example, cobbling together a tablet-like PC for your kitchen—by all means, do! They are fantastic tiny computers, just not the most ideal beginner electronics platforms.The newer <a href="https://www.raspberrypi.org/products/raspberry-pi-3-model-b/">Pi 3</a> is especially fantastic, by the way.</p>
<h3 id="ubiquity">Ubiquity</h3>
<p>When you’re choosing your first dev board, you’re focused on learning how to do things with electronics. Getting sidetracked by a platform’s idiosyncrasies (or, even, bugs) is not only annoying, it can be derailing. At this point in your journey, it shouldn’t be your job to figure out whether a component or project is misbehaving because of some arcane wonkiness in the hardware (or supporting firmware) itself. Working on a well-tested platform is helpful here: when an LED fails to blink, it’s more than likely pilot error; you can factor out most (but never all, truth be told) random flakiness when trying to figure out what’s up.</p>
<p>And when you do get stuck or confused, it’s awfully nice to have a big corpus of support to turn to.</p>
<p>For both of these—stability and support—an underlying core factor is the platform’s popularity, its relative ubiquity. For beginners, choosing a platform that is widely used and has been around for a while can be a sanity-saving tactic.</p>
<h2 id="two-different-approaches">Two Different Approaches</h2>
<p>At the end of the day, there are certain dev boards that tick most of the boxes time and time again, for each of two approaches (and you choose your own adventure here!):</p>
<ul>
<li><em>Learning key electronic fundamentals</em>: In this path, you’re really focused on understanding electronic principles on a fundamental level. This is for you if you’re innately curious about the interactions of current, resistance and voltage (howdy, Ohm’s Law!) and, really, how things <em>work</em> physically. This path is lower-level but leads to a wide competence in low-voltage DC circuitry (believe me, this really does come in handy in life!).</li>
<li><em>Building web-connected devices</em>: This is for you if you have at least a passing interest in the electronics themselves (if you don’t, this post really isn’t for you, anyway), but also have some (software) development background (read: JavaScript). This approach gets you to fully-flung embedded systems faster, in some cases making the vast <code>npm</code> ecosystem of Node.js available to you. This will require a more sophisticated microcontroller/processor than those needed for the first path.</li>
</ul>
<h2 id="first-choice-for-learning-electronics-fundamentals-arduino-uno-r3">First Choice for Learning Electronics Fundamentals: Arduino Uno R3</h2>
<p>Ohmigod, how <em>boring</em>! you might be lamenting. I’ve just held up the non-cutting-edgiest, pedestrian, and basically <em>first</em> open-source board as a shining example of newbie awesome.</p>
<p><img src="uno.png" alt="A bad artist&#39;s impression of the Arduino Uno (R3) board"></p>
<p><em>Illustration: A bad artist’s impression of the Arduino Uno (R3) board</em>.</p>
<p>Yes, it’s true, the Uno has been around since a long time, and, also true, is seriously <em>not flashy</em>, but it really is a platform of the people. Its relative stodginess is a blessing when compared to the immaturity and fragility of many boards. Sure, working with one won’t give you the smug <em>frisson</em> of novelty, but it will, in most cases, <em>actually work</em>. The Uno does what it says it does. If it didn’t, there are a lot of people who’d be irked.</p>
<p>Statistics are spotty at best, but even back in 2013, 700,000 <em>official</em> Arduino boards had been “registered”, with an estimated 700,000 additional “derivative or clone board[s]”, that is, about a one-to-one ratio (<a href="http://medea.mah.se/2013/04/arduino-faq/">source</a>).</p>
<p>Let’s talk about a couple of things here. First: Arduino is a <em>family</em> of boards, and the 700k number references Arduino boards of all stripes, not specifically the Uno (though the Uno is the most popular, and, no, I don’t have a good source for that but it <em>certainly seems to be the damned case</em>). At the same time, it’s been several years so surely there are many more. All right, that’s out of the way.</p>
<p>The “derivative or clone board” notion arises because while Arduino is open-source, “official” ones carry the Arduino logo and can only be made by certain blessed manufacturers. Non-official ones are fine, too, but there is a bit of a thing with knock-offs that have the logo but shouldn’t, so-called <a href="https://www.arduino.cc/en/Products/Counterfeit">“counterfeit” Arduinos</a>, which are cheaper to buy but potentially shoddy.</p>
<p>Here’s how the Arduino Uno R3 stacks up:</p>
<ul>
<li><em>Clear, Intuitive Features</em>: Unos have clearly-marked I/O pins, laid out sensibly. An added bonus: pins that support PWM are marked with a tilde (~) and, once again, don’t worry if you don’t know what that is, yet. While Unos certainly aren’t the most svelte form factor, their roominess gives you plenty of space to maneuver. Unos, or, more accurately, their ATmega328P microcontrollers, support all the requisite basic features just fine.</li>
<li><em>Constraints</em>: That selfsame ATmega328P microcontroller is 8-bit, running at something like 20MHz, and it only has 32kB of Flash memory (space for your programs). That’s <em>really</em> constrained. You’re not going to run any kind of (recognizable, let’s not get clever here) OS on that, that’s for sure. But it totally fits the bill for doing all the classic things you do when learning embedded electronics.</li>
<li><em>Ubiquity</em>: It doesn’t get more ubiquitous. Also, the ATmega328P is a battle-tested microcontroller; it’s reliable and sensible.</li>
</ul>
<p>Expect to pay about US$25 for a certified Arduino Uno R3, considerably cheaper if you’re willing to take a risk on reliability, which, at this stage in the game, I wouldn’t?</p>
<p>The Uno: unglamorous, reliable, and the <em>sui generis</em> for educational hardware hacking. There is really no substitute.</p>
<h3 id="learning-electronics-with-the-arduino-uno">Learning Electronics with the Arduino Uno</h3>
<p>OK, so there is this fantastic book—brilliant visual design, clear instructions, just in all ways excellent. It’s called <em>Arduino Projects Book</em>. But there’s a pretty major downside: you can <em>only</em> get it if you purchase the (official) <a href="https://store.arduino.cc/usa/arduino-starter-kit">Arduino Starter Kit</a>. That’s a bit of a bummer, but I will say: that starter kit rocks. It’s worth getting if you can spare the extra funds (they’re currently retailing at $85). Of course, there are tons of other getting-started books on the market if you Google around a bit.</p>
<p><a href="http://www.ladyada.net/learn/arduino/">LadyAda’s tutorials</a> are a free resource, and there are a <a href="https://store.arduino.cc/usa/books-manuals">handful of books for beginners</a> called out on the Arduino website.</p>
<h2 id="first-choice-for-web-connected-devices-tessel-2">First Choice for Web-Connected Devices: Tessel 2</h2>
<p>And now for something completely different, and lightly violating what I said about constraints and ubiquity: the <a href="https://tessel.io/">Tessel 2</a> board. The Tessel runs an optimized-for-embedded Linux distribution, OpenWRT, and has enough oomph to run Node.js on-board. So, if you’ve selected the “Web-Connected Devices” adventure, you can <code>npm</code> to your heart’s content and do some pretty complex, nifty software things in short order.</p>
<p><img src="tessel.png" alt="The Tessel 2 board"></p>
<p>Like the Arduino, Tessel is an open-source platform. Also like the Arduino Uno, the Tessel’s pins are sanely organized and labeled and the board supports all the major features you’d expect. It’s a more sophisticated device than the Uno, with a separate co-processor for handling I/O. There are some frills. You’ll likely put the on-board WiFi to use straightaway. There are two USB peripheral ports, which are fun to play with but I’d recommend keeping it simple to start and ignoring those initially.</p>
<p>For controlling the Tessel 2, I recommend Johnny-Five, an open-source, widely used, cross-platform-compatible JavaScript framework.</p>
<p>Here’s how the Tessel 2 Stacks Up:</p>
<ul>
<li><em>Clear, Intuitive Features</em>: Tessel 2’s pins are organized into two “ports” of 10 pins each (two power pins and 8 I/O). They’re straightforward to figure out. The workflow will feel familiar to web and Node.js developers. The on-board WiFi is a real boon for building web-connected things.</li>
<li><em>Constraints</em>: The Tessel can do more stuff than the Uno and that’s potentially overwhelming, but if you resist the temptation to futz around with interesting features of its OpenWRT OS and the USB peripherals right away, it can provide a focused learning platform, especially paired with Johnny-Five.</li>
<li><em>Ubiquity</em>: Straight up, the Tessel 2 doesn’t have a massive user base. But it’s growing into itself and maturing. Johnny-Five recently had its fifth birthday, and has a wide community of contributors and supporters.</li>
</ul>
<p>A lot of bells and whistles don’t necessarily make this a complicated platform. The workflow is smooth and feels natural for Node.js/JavaScript programmers. Johnny-Five has intuitive, built-in support for tons of components.</p>
<h3 id="learning-electronics-with-the-tessel-2">Learning Electronics with the Tessel 2</h3>
<p>SparkFun sells a complete <a href="https://www.sparkfun.com/products/13847">Johnny-Five Inventor’s Kit</a>, which includes a Tessel and a bunch of components (disclaimer: I was involved in writing the <a href="https://learn.sparkfun.com/tutorials/experiment-guide-for-the-johnny-five-inventors-kit">experiment guide</a>. Even if you don’t buy the kit, that guide is pretty exhaustive (tons of great effort from several committed people!).</p>
]]></description><link>http://www.lyza.com/2017/07/07/i-am-a-hardware-beginner-which-dev-board-should-i-get/</link><guid isPermaLink="true">http://www.lyza.com/2017/07/07/i-am-a-hardware-beginner-which-dev-board-should-i-get/</guid><category><![CDATA[javascript]]></category><category><![CDATA[JSoT]]></category><category><![CDATA[tech]]></category><pubDate>Fri, 07 Jul 2017 14:06:10 GMT</pubDate></item><item><title><![CDATA[JavaScript Promises in 60 Seconds]]></title><description><![CDATA[<p>After I gave my talk, <em><a href="https://smashingconf.com/ny-2017/schedule/day:tuesday#lyza-danger-gardner">A Pragmatist’s Guide to Service Workers</a></em> at <a href="https://smashingconf.com/ny-2017">Smashing Conf NYC</a>, several folks gave me feedback that they liked the metaphor that I used in a tangent about JavaScript Promises, which you need to understand to be able to understand the <a href="https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API">Service Worker API</a>.</p>
<p>Here is just that section of the talk. The allusion to the <a href="https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API">Fetch API</a> is because of its importance to Service Worker. Enjoy? Enjoy!</p>
]]></description><link>http://www.lyza.com/2017/07/03/javascript-promises-in-60-seconds/</link><guid isPermaLink="true">http://www.lyza.com/2017/07/03/javascript-promises-in-60-seconds/</guid><category><![CDATA[javascript]]></category><category><![CDATA[tech]]></category><pubDate>Mon, 03 Jul 2017 14:56:51 GMT</pubDate></item><item><title><![CDATA[Voltage, Current, Resistance&#8230;with Gnomes]]></title><description><![CDATA[<p><a href="https://www.manning.com/books/javascript-on-things"><img src="js-on-things.png" alt="JavaScript on Things: Hardware for Web Developers by Lyza Danger Gardner" class="Pull--left" /></a></p>
<p><em>The following is an excerpt from chapter 3 of</em> <a href="https://www.manning.com/books/javascript-on-things">JavaScript on Things: Hardware for Web Developers</a> <em>by me, Lyza Danger Gardner (I also take the blame for the illustrations). I hope you enjoy it! The book is in early release (MEAP) from Manning Publications. It’s intended as a soup-to-nuts get-started guide to electronics hacking for JS-familiar web developers.</em></p>
<hr>
<p>Designing and building circuits may be completely new to you, and may seem intimidating. The good news is that there are just a handful of core concepts to wrap your head around. Once you understand the interplay of voltage, current and resistance—as formalized in Ohm’s Law—you’re well on your way to being able to understand basic circuits.</p>
<p>There are a couple of metaphors traditionally used to illustrate voltage, current and resistance. The most common analogy is a hydraulic (water) system involving tanks and pipes. Effective, but not always memorable. Let’s try a different adventure.</p>
<h2 id="voltage-current-and-resistance">Voltage, Current and Resistance</h2>
<p>High in the mountains, deep in the forest of some place that does not exist, a tribe of gnomes found themselves inexplicably in possession of an infinite supply of jellyfish. And the gnomes being ornery and mischievous, they struck out to find a humorous use for the otherwise-inert creatures. They found great fun in dropping jellyfish over cliffs, watching them splash into the lake below or bounce off the roofs of local villages.</p>
<p>The nearby townspeople were initially inconvenienced but soon recognized that the plummeting invertebrates carried energy and could be a free source of power for their cookie factories—but only if the onslaught could be harnessed safely. So they observed, and, over time, came to understand and manipulate the core factors of electrical circuits: voltage, current and resistance.</p>
<p>Townspeople noticed quickly, for example, that the higher and steeper the cliff, the more energy tossed jellyfish have when they reach the lake on the valley floor. Lesser drop-offs don’t provide as much potential energy for hijinks when the jellyfish splash down.</p>
<p>Higher cliffs provide more “voltage”, that is, electrical potential. <em>Voltage</em> is like electrical “pressure”, pushing the charges (jellyfish) from high potential energy toward a location of lower potential.</p>
<p><img src="03-voltage.png" alt="Higher cliffs provide more &quot;voltage&quot;, that is, electrical potential. *Voltage* is like electrical &quot;pressure&quot;, pushing the charges—jellyfish—from high potential energy toward a location of lower potential."></p>
<p><em>Voltage</em> is a measurement of the difference of potential energy between two points. It’s something like pressure or tension or gravitational force, as electricity is always itching to move from higher voltage to lower voltage. Voltage, measured in volts, is <em>potential</em> energy, however—voltage alone without moving charged electrons (jellyfish) can’t wreak any havoc.</p>
<p><img src="03-potential-energy.png" alt="Voltage is _potential_ energy."></p>
<p>For something interesting to happen, jellyfish need to get actively chucked over the edge of the cliff, a task which the gnomes are more than happy to perform.</p>
<p>The townspeople learned to measure jellyfish current by staking out a spot on the cliff and precisely counting the number of jellyfish that passed by over a precise period of time. <em>Current</em>, the flow of electric charge, is measured in <em>Amperes</em>, often abbreviated as <em>Amps</em>.</p>
<p><img src="03-current.png" alt="Current is a flow of charge."></p>
<p><em>Current</em>, the flow of electricity, can be measured by counting how many charges (jellyfish) pass a specific spot on a cliff during a defined period of time.</p>
<p>The townspeople needed to find a way to manage the current of jellyfish so that it wouldn’t overwhelm the delicate cookie presses and ovens. This is the lynchpin of jellyfish circuit control: <em>resistance</em>. Resistance is how much a material is able to resist electrical flow. It is measured in <em>Ohms</em>.</p>
<p>They engineered jellyfish-channeling systems into the cliff faces, restricting their flow to a more reasonable level. For circuits near the higher cliffs (more voltage), these systems had to be more robust because of the immense jellyfish-falling pressure from above.</p>
<p>Townspeople add <em>resistance</em> to the circuit by channeling falling jellyfish through a series of tubes. Increasing resistance lowers the current.</p>
<p><img src="03-resistance.png" alt="Increasing resistance lowers current"></p>
<p>A summary of the townspeople’s discoveries is shown here:</p>
<p><strong>Voltage</strong></p>
<ul>
<li>What it means: The difference of electrical potential between two points. Akin to electrical “pressure”. It’s what pushes electrical charges through a circuit.</li>
<li>Abbreviated as: V (occasionally E)</li>
<li>Measured in units of: Volts</li>
</ul>
<p><strong>Current</strong></p>
<ul>
<li>What it means: how many electrical charges are passing a single point during a defined period of time.</li>
<li>Abbreviated as: I</li>
<li>Measured in units of: Amperes (Amps)</li>
</ul>
<p><strong>Resistance</strong></p>
<ul>
<li>What it means: A measurement of a material’s ability to resist electrical flow.</li>
<li>Abbreviated as: R</li>
<li>Measured in units of: Ohms (denoted by the Ω symbol)</li>
</ul>
<p>In the end, the townspeople perfected the circuit and the jellyfish helped to make some of the best cookies around.</p>
<p>There is a power source—troops of gnomes—tossing jellyfish over a cliff. The higher the cliff, the more <em>voltage</em> (potential energy) is supplied to the circuit. The <em>current</em> (flow) of jellyfish heads toward the factory machinery.</p>
<p>To reduce the jellyfish current to manageable levels, channeling systems and pipes add <em>resistance</em>.</p>
<p>Once the jellyfish have given power to the cookie-making machinery and reached the floor of the factory, they reach the point of lowest potential in the circuit. Jet-pack-wearing gnomes act like a pump of sorts, hoisting the weary jellyfish back up the cliff where they can be thrown over again. And again and again…</p>
<p><img src="03-gnome-circuit.png" alt="A complete gnome-and-jellyfish &quot;circuit&quot;"></p>
<p>Voltage, current and resistance are vital concepts of basic circuitry. The next step is to understand how these factors relate to each other, and how they apply to real-world circuits.</p>
<h3 id="ohm-s-law">Ohm’s Law</h3>
<p>Voltage, current and resistance are related to each other in consistent ways. Each of the three factors is like a lever: tweak one and you will affect the others. These interplays became so central to the town’s populace that the factories started producing cookies that illustrated the relationships.</p>
<p>The townspeople’s new signature cookie showed the relationship between voltage (V), current (I) and resistance (R).</p>
<p><img src="03-cookie.png" alt="The townspeople&#39;s new signature cookie showed the relationship between voltage (V), current (I) and resistance (R)"></p>
<p>The bearer of the cookie can bite off the factor she wishes to determine—then see how it can be derived from the other two factors. For example, if she wanted to determine resistance (R), she could bite that off and see that R = voltage (V) divided by current (I).</p>
<p><img src="03-cookie-equations.png" alt="For example, if she wanted to determine resistance (R), she could bite that off and see that R = voltage (V) divided by current (I)"></p>
<p>Georg Ohm figured out these key relationships between voltage, resistance and current back in the 1820s, well before the clever cookie-townspeople, which is why <em>Ohm’s Law</em> bears his name. If you prefer your math in non-cookie form, the relevant equations are:</p>
<pre><code>V = I x R (Voltage <span class="hljs-keyword">equals</span> current <span class="hljs-keyword">times</span> resistance)
I = V / R (Current <span class="hljs-keyword">equals</span> voltage divided <span class="hljs-keyword">by</span> resistance)
R = V / I (Resistance <span class="hljs-keyword">equals</span> voltage divided <span class="hljs-keyword">by</span> current)
</code></pre><hr>
<p>_OK_, you might be thinking, <em>but how do I apply this in the real world?</em> … Well, I hope you might give <a href="https://www.manning.com/books/javascript-on-things"><em>JavaScript on Things: Hardware for Web Developers</em></a> a read and find out!</p>
]]></description><link>http://www.lyza.com/2016/11/30/voltage-current-resistancewith-gnomes/</link><guid isPermaLink="true">http://www.lyza.com/2016/11/30/voltage-current-resistancewith-gnomes/</guid><category><![CDATA[tech]]></category><category><![CDATA[js]]></category><category><![CDATA[hardware]]></category><category><![CDATA[web]]></category><pubDate>Wed, 30 Nov 2016 20:48:30 GMT</pubDate></item><item><title><![CDATA[And now for something completely&#8230;different?]]></title><description><![CDATA[<p>Up until a few months ago, I lived in a space-constrained duplex in a happening urban neighborhood in happening Portland, Oregon. Now I live in the middle of a mountainous forest in Vermont, on a dirt road, next to a river. I changed jobs. I got rid of about 75% of what I owned. On the face of it, everything has changed. Or has it?</p>
<p>Here are some thoughts on all of the changes, as well as some thoughts on how much hasn’t changed at all. In the form of a FAQ, because: why not?</p>
<h2 id="wait-where-exactly-do-you-live-now-">Wait. Where exactly do you live now?</h2>
<p>In a town in southern Vermont. When I say <em>town</em>, I mean it in the New England sense: a square-ish area of land roughly 6 to 10 miles on a side. Not all towns have villages or any form of conurbation; ours does but it is about eight miles distant.</p>
<p>We live on a dirt road that is well-maintained but is, still, dirt. Our nearest neighbors are across the river, about 800 feet as the crow flies but a quarter-mile walk to get there. They’re the only neighbors within screaming distance.</p>
<h2 id="where-the-heck-do-you-buy-food-and-stuff-">Where the heck do you buy food and stuff?</h2>
<p>There’s a general store about six-and-a-half minutes away by car. The two local villages are each about a 12-minute drive. One has a grocery store I’d roughly equate to Safeway on the west coast: it’s sufficient but not inspiring.</p>
<p>It’s remarkable and rewarding how much of our food is obtained directly from the humans who made it. We belong to a little CSA up the road—it’s personal enough that they’ll notice and comment on our absence if they don’t see us for a week or two. There’s a Jersey dairy—raw milk and eggs—down the road. Pork and chicken often comes from another farm run by a couple in the next town over. And one of our neighbors raises grass-fed lamb (and may—CROSS FINGERS—scale into acorn-fed pork soon).</p>
<h2 id="what-s-the-landscape-like-">What’s the landscape like?</h2>
<p>Tons of local relief. Our house is at the bottom of a valley. We are surrounded by forest, save for a small field on the east end of our property which is used for hay for our neighbor’s sheep. I usually say that, aside from that field, you can tell when you’re on our property because you won’t be able to stand up properly—it’s that steep, most of it.</p>
<p>There’s a river. Technically it’s the North Branch of the Williams River, but no one ever calls it that. It’s just <em>the river</em>. It’s a small river; you can walk across it easily, a large creek, really. The water is clear and the rocks various and interesting.</p>
<h2 id="so-you-re-off-grid-or-whatever-">So, you’re off-grid or whatever?</h2>
<p>No, not entirely. So, no. We do have a grid-tied pole-mounted 3kW solar array, but it doesn’t power the whole house. We’re also connected to civilization through our phone/Internet lines (more on that shortly). Aside from that, though, yes: we have a well, septic. Our heating fuel is provided by an in-ground propane tank.</p>
<h2 id="getting-online-must-suck-">Getting online must suck?</h2>
<p>Is that a question or a statement? Here’s the best part of all the parts, when taken as part of the beautiful whole: our Internet is <em>fantastic</em>. The local telecom got a grant from the federal government and used it to invest in a fiber grid. We pay a reasonable amount and we get reliable 1G symmetric connectivity (real-world performance between 600-800Mbps). Yee haw!</p>
<h2 id="aren-t-you-terribly-isolated-">Aren’t you terribly isolated?</h2>
<p>This has been the most surprising thing about this change. I expected to have loneliness, to have to work intensely to have contact with other humans. And yet. We know all of our neighbors. Our front yard and porch are visible from the road and sometimes people just drop by if they see us. Our friends and family visit us.</p>
<p>Sometimes we won’t leave our property for four or five days at a stretch and it isn’t bothersome at all.</p>
<h2 id="so-you-work-from-home-">So you work from home?</h2>
<p>Yep! I’m lucky to have my position as an Open Web Engineer at Bocoup. Their systems and people are well-oriented for distributed teams. We’re fortunate to have a real, dedicated office portion of our house: a separate staircase, large shared office room and a half-bathroom. So “going to work” feels like a thing, still.</p>
<h2 id="and-you-re-not-going-crazy-">And you’re not going crazy?</h2>
<p>Nope.</p>
<h2 id="really-">Really?</h2>
<p>Really. But we’ll see what happens once winter comes!</p>
]]></description><link>http://www.lyza.com/2016/09/20/and-now-for-something-completelydifferent/</link><guid isPermaLink="true">http://www.lyza.com/2016/09/20/and-now-for-something-completelydifferent/</guid><category><![CDATA[life]]></category><pubDate>Tue, 20 Sep 2016 17:38:25 GMT</pubDate></item><item><title><![CDATA[JavaScript and Hardware with the Host-Client Method]]></title><description><![CDATA[<p>2016 is my own year of combining JavaScript with hardware in the real world, including a large project that I’m almost ready to talk about, but not quite. When I talk to web developers about hacking on hardware, often the first question I hear is: <em>but how does it</em> work? <em>How do JavaScript and hardware work together?</em></p>
<h2 id="what-is-hardware-">What is <em>hardware</em>?</h2>
<p>There are several technical ways JavaScript can be used to control physical objects. Most of the <em>objects</em> I’m talking about loosely here can be categorized as <em>embedded systems</em>. <em>Embedded system</em> is a term that sounds a bit more complex than it need be—in (blog-post-informal) essence they’re <em>embedded</em> because they tend to be hidden away inside of something, like a thermostat or a microwave or a homebrew 3D-printed project enclosure; <em>systems</em> because they combine a tiny computer with various connections and power to create, well, a <em>system</em>.</p>
<p>The “tiny computer” involved is typically a <em>microcontroller</em>, which combine processor, memory and I/O capabilities are combined in a single package (that is, a chip). Microcontrollers tend to be simple creatures, 8- or 16-bit processors with limited memory (on the order of tens of kilobytes, often) that require very little power to do their thing. They’re cheap, reliable and ubiquitous.</p>
<p>Microcontrollers are small, with absolutely itty-bitty connection pins. For novices and hackers and prototypers, <em>development boards</em> make it easier to work with microcontrollers by providing human-sized ways to connect to the I/O pins of the microcontroller. The boards also provide a steady way to power the microcontroller as well as several supporting features like timing chips, connections for different communication protocols, easier methods to get programs onto the microcontroller, etc.</p>
<p><img src="arduino-uno.jpg" alt="Arduino Uno Development Board"></p>
<p>Developer boards like the omnipresent Arduino Uno give easy access to I/O connections and take some headache out of working with microcontrollers.</p>
<h2 id="controlling-constrained-hardware-with-js">Controlling constrained hardware with JS</h2>
<p>Microcontrollers are getting cheaper and faster. Newer, 32-bit MCUs (that’s an abbreviation for <em>microcontroller</em>), especially some of the ARM Cortex-based ones, are capable of running actual native JavaScript, or something damn close to it. It has become feasible to run <em>embedded JavaScript</em>. But we’ll put that aside for another time.</p>
<p>Aside from embedded JavaScript, another method for controlling hardware with JavaScript is a <em>host-client</em> setup. Recall that microcontrollers can be quite constrained—8- or 16- bit processors, very limited space for programs. They’re not up to running an operating system or Node.js or executing JavaScript on their own. Instead, the host-client configuration converts the hardware (microcontroller-based board) into a <em>client</em> which does the bidding of JavaScript that is executed on a <em>host</em> (e.g. your laptop).</p>
<p>A combination that works consistently for me is uploading (flashing) the firmata protocol to an Arduino-compatible board—this might sound mysterious but is as easy as uploading a pre-packaged script to the board from the free and cross-platform Arduino IDE. Then I write scripts using <a href="http://johnny-five.io"><code>Johnny-five</code></a> and execute them with <code>node</code>.</p>
<p>Johnny-five provides a high-level API (with classes like <code>Led</code>, <code>Compass</code>, <code>Piezo</code>, etc.) that can feel more comfortable to higher-level programmers than microcontroller code written in C or whatnot. Getting started is pretty easy!</p>
<h2 id="learning-about-johnny-five">Learning about Johnny-Five</h2>
<p>I recently gave a presentation about this at the <a href="http://www.meetup.com/JavaScript-and-the-Internet-of-Things/events/228638637/">March meeting</a> of Portland’s <a href="http://www.meetup.com/JavaScript-and-the-Internet-of-Things/">JavaScript on Things</a> Meetup.</p>
<p>To learn more about how prepare a board as a client and some Johnny-five basics, you can read <a href="http://lyzadanger.github.io/jsot-johnny-five-slides">my (warning: pretty informal!) slides</a>. Or jump straight to looking at <a href="https://github.com/lyzadanger/jsot-johnny-five">some examples of scripts and wiring schematics</a>, like this “pointing-north alarm”:</p>
<p><img src="fritzing-compass.png" alt="Fritzing wiring schematic for one of the examples in the jsot-johnny-five repo"></p>
<p>I was also just on <a href="http://www.hanselminutes.com/521/march-is-for-makers-arduinos-javascript-and-johnny-five-with-lyza-danger-gardner">Hanselminutes</a> talking about the host-client method of controlling hardware with JavaScript.</p>
]]></description><link>http://www.lyza.com/2016/04/05/javascript-and-hardware-with-the-host-client-method/</link><guid isPermaLink="true">http://www.lyza.com/2016/04/05/javascript-and-hardware-with-the-host-client-method/</guid><category><![CDATA[tech]]></category><category><![CDATA[js]]></category><category><![CDATA[hardware]]></category><category><![CDATA[web]]></category><pubDate>Tue, 05 Apr 2016 15:48:38 GMT</pubDate></item><item><title><![CDATA[Am I Good Enough to be Here?]]></title><description><![CDATA[<p>It has been a banner year so far, 2016. I’ve been included in some frankly amazing things: events, publications, conversations. There are things coming up this year that I’m just bursting to tell you all about (I will as soon as I can!). At times I stop to reflect that I just <em>cannot believe</em> how fortunate I am to have so many opportunities.</p>
<p>But as happens every so often, I’m not so sure I deserve this. I want to believe I’m invited to speak because I’m becoming reasonably good at it, that magazines want to hear what I have to say because what I have to say is cogent. Sometimes I believe that to be the case.</p>
<p>But at other times, I worry. Like today. I got invited to speak at an event far away in an interesting place, and, man, that would be awesome except that by some coincidence I am already slated to be at an event far away in an interesting place at the same time, so I had to decline. Instead, I passed along the name of a talented male colleague as a possible alternative.</p>
<p>The response:</p>
<blockquote>
<p>Thanks…though I’m specifically looking to get more ladies on my lineup.</p>
</blockquote>
<p>OK. I get it. Organizers want to have diverse lineups. But spelling it out to me like this makes me feel wretched. Is my gender my only qualification? Would I have made the cut if I weren’t a woman? Am I really qualified to be doing <em>anything</em> that I’m doing? Do I bring anything useful to the community?</p>
<p>I know that the sentiment behind things like this is a desire to bring more voices to the fore, to give changes to under-represented folks. But it hobbles me with self-doubt.</p>
]]></description><link>http://www.lyza.com/2016/01/21/am-i-good-enough-to-be-here/</link><guid isPermaLink="true">http://www.lyza.com/2016/01/21/am-i-good-enough-to-be-here/</guid><category><![CDATA[tech]]></category><category><![CDATA[opinion]]></category><pubDate>Thu, 21 Jan 2016 23:28:55 GMT</pubDate></item><item><title><![CDATA[2015 Conference Trends: Hat-tips and a Few Grimaces]]></title><description><![CDATA[<p>Oh, the year’s almost over! I went to some conferences. I spoke at a few conferences. <a href="http://cloudfour.com">Cloud Four</a> held our first-ever event, <a href="https://www.responsivefieldday.com">Responsive Field Day</a>, in September. What follows are my own editorial opinions about the good, the bad and the “whatever, enh” cobbled together from my three types of involvement (attendee, speaker, organizer) in conferences about the web.</p>
<h3 id="the-good">The Good</h3>
<h4 id="my-favorite-shorter-talk-times">My Favorite: Shorter Talk Times</h4>
<p>I’ve seen a rash of session times ranging from 15-30 minutes instead of 45-60. There are some self-evident pitfalls here—schedule management, content whiplash, inability to dive deep—but for many conferences, this works fantastically for me from all three (attendee, speaker, organizer) angles.</p>
<p>As a short-attention-span attendee, my interest is held well. Speaker energy tends to be more constant, and more focused. This leads to more interesting, denser presentations and allows for more topics to be included in a single event.</p>
<p>As a speaker, I <em>adore</em> shorter sessions. Please. More. I’m able to maintain intensity throughout without getting tired, and it forces me to <em>focus my thesis</em>. It also allows me to be more critical-precise in timing because I’m working on a tighter scale. The <em>majority</em> of my most-successful presentations have been delivered in shorter time slots.</p>
<p>And for organizers, it allows the ability to include more content and more diversity of voices in a single event.</p>
<h4 id="more-hat-tips">More Hat Tips</h4>
<ul>
<li><em>An increased effort toward speaker and attendee diversity</em>. This is a behemoth topic I won’t dive into here, but it is emphatically front-and-center in our industry. I’ve seen some tactics (gender-blind RFPs, involvement in local community groups) to boost both underrepresented voices as well as giving newer speakers good opportunities.</li>
<li><em>More sympathy to the efforts of speakers</em>. Non-profit and community events aside, most conferences are in a position to compensate speakers or at the least cover expenses. After all, the speakers <em>are the conference</em>.</li>
<li><em>More single-track conferences</em>. Being able to have a collective experience minus the session-selection stress leads to a more cohesive feel for many conferences. It’s not a fit for all types of events. But where it does fit, it leads to a stronger sense of a shared involvement without the need to miss out on any content.</li>
</ul>
<h3 id="changing-backchannels">Changing Backchannels</h3>
<p>The role of Twitter is changing. For many it remains indispensable at conferences. But I’ve also attended a few conferences this year from which the Twitter traffic was virtually nil.</p>
<p>My attitude puts me somewhere in the middle. As a conference attendee, monitoring the feed from the hashtag for the event can be useful. As a non-attendee (i.e. my other contacts tweeting about conferences I’m not at), conference-related traffic is effectively useless. Twitter, as always, seems to be a matter of opinion.</p>
<p>2015 is the year of everyone falling in love with Slack. It happened to us at Cloud Four, too (we’ve been using Slack for quite a while now, for kind of everything). Slack’s spike in popularity has led to its use as the backchannel of choice at several conferences I attended this year. On the one hand, it’s an efficient and engaging way to communicate. On the other hand, it can serve as an inducement to futz around on devices during sessions and a disconnect or distraction. The jury’s out on this one for me.</p>
<h3 id="the-not-so-great">The Not-so-Great</h3>
<ul>
<li><em>Still, a lack of diversity</em>. This concept needs no introduction.</li>
<li><em>Chaos and lackluster schedule control</em>. Complex multi-track events and those with shorter talk times need the commitment and focus of organizers to make sure things flow smoothly. Speakers need to be apprised clearly of time constraints (I showed up for <em>multiple</em> conferences this year to find out—on the day of the event—that my speaking slot was different from what I’d been told in previous communications). I saw some fantastic schedule management this year. I also saw some trainwrecks.</li>
<li><em>No speakers’ event</em>. I went as a speaker to several conferences this year that had no event whatsoever for speakers. Let me clarify so that this doesn’t sound terrifically entitled. I don’t care if I have to pay for the event out of my own pocket or if lavish food and drink are not served. I just want to meet my (typically admirable and interesting) co-speakers. It’s part of the appeal of accepting invitations in the first place. Not having a chance to meet and interact with other speakers and organizers makes me feel unmoored, disconnected from the event.</li>
<li><em>First-come, first-served activities</em>. This is an odd and specific one. A few times this year I saw activities described this way at events—lunches, giveaways—and I cringed. Not only at the pushy-shovy nature this espouses but also in no small part because I have an immediate family member with mobility challenges and I think of her and I get a little bothered on her behalf. I understand that sometimes sessions overflow (however, another argument for single-track conferences!) but there’s something that makes me twitchy about this notion overall.</li>
</ul>
<h3 id="a-great-year">A Great Year</h3>
<p>As I recall my year of conferences, what floats into my head is happiness. Whenever I speak at an event, I feel honored to have been invited, and hope that I am living up to the high expectations of attendees and organizers. I’ve attended  events with crackerjack content and energy. And now I’ve been fortunate enough to come full circle and see what it’s like from the organizers’ side.</p>
<p>Curious about other conference-goers’ experiences this year!</p>
]]></description><link>http://www.lyza.com/2015/12/15/the-good-and-bad-of-2015-conferences/</link><guid isPermaLink="true">http://www.lyza.com/2015/12/15/the-good-and-bad-of-2015-conferences/</guid><category><![CDATA[tech]]></category><category><![CDATA[opinion]]></category><pubDate>Tue, 15 Dec 2015 19:42:26 GMT</pubDate></item><item><title><![CDATA[Scampering after Node.js Versions]]></title><description><![CDATA[<p>The morning keynotes at <a href="http://events.linuxfoundation.org/events/node-interactive">Node Interactive</a> just happened and I’m reeling a bit and talking to interesting people but wanted to write something down before I forget.</p>
<p>Node.js versions are <em>cray-zee</em> for me right now.</p>
<p>For some reason, it was calming when <a href="https://twitter.com/jasnell">James Snell</a> mentioned that the late-2014 Node.js/io split freaked <em>everyone</em> out and my desire to stick my fingers in my ears and pretend it didn’t happen echoed how most of the community felt, too. And so we are all glad to see the convergence, and now the best of both communities combined:</p>
<ul>
<li>The open governance model and velocity from io.js</li>
<li>The stability focus from Node.js</li>
</ul>
<p>And a whole lot less weird tension about the Node.js vs. io.js fiasco.</p>
<h3 id="straight-to-5-0-x-">Straight to 5.0.x?</h3>
<p>Cool. By now, most of us in the node community have seen the <a href="https://nodesource.com/blog/essential-steps-long-term-support-for-nodejs">release schedule for Node.js</a>. The launch into that was fast and heavy: <code>4.0.0</code> in September, <code>5.0.0</code> in October (at time of writing we’re at <code>5.1.1</code> for stable). This had led to a sense of rushing to be writing new code on the latest, but hang on.</p>
<p><code>4.x</code> and <code>5.x</code> are both stable, but they’re not the same: <code>4.x</code> will go into active LTS (long-term support) in six months, and will stay in LTS for 18 months after that. <code>5.x</code> is stable, but will never got into LTS. That is, stable-with-LTS releases are yearly—and the releases you should lean toward for long-term, production work.</p>
<h3 id="who-uses-what-now-">Who Uses What, Now?</h3>
<p>Yes, we are moving quickly as a community. Also in Snell’s keynote was the statistic: about 38% of folks are at <code>4.0.0</code> or better. That’s fast.</p>
<p>At the same time, there is a lot of legacy code out there. <a href="https://twitter.com/sh1mmer">Tom Croucher</a>, in his keynote on Node.js at Uber, mentioned a currently-open issue in Uber’s codebase to upgrade something that is still on <code>0.8</code>. If most of your stuff is on <code>0.10</code> or <code>0.12</code>, you are not alone. Just note: active maintenance for <code>0.12</code> ends about a year from now; <code>0.10</code> earlier (Octoberish). You have some time but not forever.</p>
<h3 id="so-how-do-we-manage-this-">So How Do We Manage This?</h3>
<p>There are an assortment of ways for managing node versions from within a project, but a universal pattern hasn’t quite coalesced.</p>
<p>Dropping a <code>.node-version</code> in a project root is a tactic I’ve seen on occasion, but its inclusion in version-controlled code can be bothersome and it’s not a pattern I see terribly often. Other flavors of this dotfile-controlled versioning can be seen in <code>.nvmrc</code> or <code>.npmrc</code> form.</p>
<p>The definition of an <code>engines</code> property in <code>package.json</code> is ubiquitous, but it’s only advisory in current <code>npm</code> versions—you’ll get a <code>WARN</code>, but a package made for <code>4.0</code>+ will happily install on your local version of <code>0.12</code> (and then break when you try to use it later).</p>
<p>I’m sure I missed things, but, again, this seems scattershot to me at the moment.</p>
<h3 id="maybe-the-answer-is-obvious">Maybe the Answer is Obvious</h3>
<p>Maybe version management has already been roundly sorted and I’m an ignoramus for not being on top of it. But it’s harshing me this week. Although I haven’t blogged in a month, a hell of a lot has been going on with my site under the covers. More on that later, maybe, but.</p>
<p>Yesterday I tried to deploy a bunch of site infrastructure updates to lyza.com’s new host, <a href="http://netlify.com">netlify</a>. Call me boneheaded for not thinking more carefully about dropping in ES6 enhancements supported by <code>&gt;=4.0.0</code> but it wasn’t until after I’d deployed and the build failed—netlify won’t deploy broken builds, fortunately; yay for that—that I realized I didn’t even know what version netlify was using to build my site. Turns out <code>0.12.2</code> (I’ll gloss over it, but figuring <em>that</em> out was not as straightforward as you might imagine). Cue a few <a href="https://github.com/lyzadanger/lyza-dot-com/commit/7cc8bc19d8d81777b78f7f40508f43bb9b828682">furious</a> patch <a href="https://github.com/lyzadanger/lyza-dot-com/commit/fc3e504d147281073ccf009cf31fdcb33a15e79b">commits</a> to back out of my ES6 syntax and the builds succeeded again.</p>
<p>Netlify support via gitter was quick and responsive, and they explained I could use an <code>.nvmrc</code> keyed to any of the available versions in their <a href="https://github.com/netlify/build-image/blob/master/Dockerfile#L99">open-source Docker build image</a>, but—and I think this is a common theme—it’s not documented anywhere and it took a bit of breaking to figure it out.</p>
<p>I think the next few months are going to involve a bit of scrambling as the community works through some of this stuff. Now to go re-apply that ES6 stuff and get my site up to <code>4.0</code>+. See yah!</p>
]]></description><link>http://www.lyza.com/2015/12/08/scampering-after-nodejs-versions/</link><guid isPermaLink="true">http://www.lyza.com/2015/12/08/scampering-after-nodejs-versions/</guid><category><![CDATA[tech]]></category><category><![CDATA[web]]></category><category><![CDATA[js]]></category><pubDate>Tue, 08 Dec 2015 18:55:01 GMT</pubDate></item><item><title><![CDATA[Talking to myself with git]]></title><description><![CDATA[<p>I just made some changes to this site. As I do, maybe once per fortnight, and, I swear, I try not to talk about it too much because nerd nerd nerd boring minutiae nerd so boring.</p>
<p>But I got to thinking. My development process for this site involves a party of one—me—and I can’t imagine anyone giving a blinking momentary crap about my <a href="https://github.com/lyzadanger/lyza-dot-com">codebase</a>. It’s not solving a general problem. It’s useful to exactly one human, whose name starts with _L_ and ends with <em>yza</em>.</p>
<p>So why do I issue <a href="https://github.com/lyzadanger/lyza-dot-com/pull/2">pull requests</a> and carefully amend commits to keep my git history tidy? Why do I go to lengths to write <code>README</code>s that no one will (need to) read (ever, for any conceivable reason)? Why create a <a href="https://github.com/lyzadanger/generator-lyza">public repository for an unpublished yeoman generator</a> that no one could ever possibly benefit from? Not only that, but I wrote <em>unit tests</em>.</p>
<p>Am I being pedantic? Do I have a glimmer of hope that someone will somehow benefit from my dusty trail of code? Is this what modern technical vanity looks like? Is it like the <a href="http://www.bookofresearch.com/unexplained-mystery-of-oregon-sri-yantra.htm">mandala in the Alvord Desert in 1990</a>, placed there just for the hell of it, maybe with the expectation someone would eventually notice it?</p>
<p>(p.s. That mandala, despite title to the contrary on the above linked, is not in any way <em>unexplained</em>. An artist came forward at the time and explained how he did it. I have a former colleague who covered this story for local media. It’s intriguing and on-theme how only the story about it being supernatural or extra-terrestrial survives now in the longer-term internet annals. I guess that’s a more interesting take.)</p>
<p>I have just asked many questions. Asking them to myself, the way I assign myself to my own PRs. However dingbat and talking-to-myself this all may seem, the process just feels right. GIT WORKFLOW FOREVER.</p>
]]></description><link>http://www.lyza.com/2015/11/05/talking-to-myself-with-git/</link><guid isPermaLink="true">http://www.lyza.com/2015/11/05/talking-to-myself-with-git/</guid><category><![CDATA[web]]></category><category><![CDATA[tech]]></category><pubDate>Thu, 05 Nov 2015 23:15:34 GMT</pubDate></item><item><title><![CDATA[Lyza&#8217;s Index: September/October Rundown]]></title><description><![CDATA[<p>The past month has been blurry, due, in part, to some health fun I’ll gloss over here. But before I’m off again (it’s travel season), I wanted to jot down a few highlights.</p>
<h2 id="tech">Tech</h2>
<h3 id="responsive-field-day-cloud-four-s-first-conference-">Responsive Field Day: Cloud Four’s first conference!</h3>
<p>For <a href="http://www.cloudfour.com">Cloud Four</a> staff, <a href="http://www.responsivefieldday.com">Responsive Field Day</a> was a big ol’ deal, one of the bigger things about our 2015 so far. Everything I have to say about the quality of the talks, the community feel of the event, and the contributions of Cloud Four-ians is so laudatory that it doesn’t leave much else in my brain. Maybe that’s part of being so close to the planning and execution of it. Maybe I can’t see the proverbial forest for the trees. But, as well, all of the feedback I’ve received has been emphatically positive. So, I don’t know. It seemed, just…<em>damned good</em>.</p>
<p>It was the first event Cloud Four has put on, and the first event for which I was deeply involved in planning. I enjoyed the hell out of it.</p>
<p>You can find videos and podcast-ed audio of everything from the day, talks and panels, on the <a href="http://www.responsivefieldday.com">event’s web site</a>.</p>
<p><img src="win-goodbody-photo.jpg" alt="Hosting a panel about progressive enhancement at Responsive Field Day"></p>
<p><em>Photo copyright 2015 <a href="http://www.wingoodbody.photography/Event/20150925-Responsive-Field-Day/i-PzCzdDb">Win Goodbody</a></em></p>
<h3 id="writings-on-service-workers-and-progressive-enhancement">Writings: On Service Workers and Progressive Enhancement</h3>
<p>My <a href="http://alistapart.com/column/how-do-we-get-it-done-now">column this month</a> for <em>A List Apart</em> struck a nerve! On the good side, it’s kicked up some good conversation about how to get things done to make offline-first a reality, <em>now</em>. For example, <a href="http://davidwalsh.name/dont-wait-serviceworker-adding-offline-support-oneline">David Walsh from Surge explains a tool for managinge App Cache more simply</a>.</p>
<p>The Web is complex and fun and I hope we keep making it the best we can.</p>
<h2 id="non-tech">Non-tech</h2>
<h3 id="on-british-village-names-">On British village names…</h3>
<p>A habit I’ve had since I was about ten is poring over maps the way someone else might read novels. I was in Wales a few years ago, whiling away a country evening flipping through a British driving atlas when I started to obsess over how wonderful British village names can be. I’m going to save diving into this until later, because it absolutely deserves its own post, but the esteemed Chris Higgins used an early spreadsheet I made of some of the choice finds to inspire a recent <a href="http://mentalfloss.com/article/69445/43-charmingly-odd-british-town-names">article on Mental Floss</a>.</p>
<h3 id="on-the-domestic-front-">On the domestic front…</h3>
<p>Here’s proof that I can Pinterest with the rest of ‘em. I got bored with the scraped-up crappy melamine top of the rolling coffee table in the living room (Ikea, and how).</p>
<h4 id="before">Before</h4>
<p><img src="before.jpg" alt="Stupid Table: Before"></p>
<h4 id="then">Then</h4>
<p>Sanding, priming, and gold spray paint.</p>
<h4 id="after">After</h4>
<p><img src="after-1.jpg" alt="Stupid Table: After"></p>
<p><img src="after-2.jpg" alt="Stupid Table: After 2"></p>
]]></description><link>http://www.lyza.com/2015/10/16/lyzas-index-septemberoctober-rundown/</link><guid isPermaLink="true">http://www.lyza.com/2015/10/16/lyzas-index-septemberoctober-rundown/</guid><category><![CDATA[life]]></category><category><![CDATA[til]]></category><pubDate>Fri, 16 Oct 2015 20:33:55 GMT</pubDate></item><item><title><![CDATA[The Proper Response to iOS Safari Split View is Not a Bunch of Bean-Counting Pixel Math]]></title><description><![CDATA[<p>There’s a lot of tasty meat to <a href="http://www.mobilexweb.com/blog/ios9-safari-for-web-developers">Firt’s post about iOS 9 Safari tech deets</a> and, correspondingly, there’s been a lot of chatter around the intertubes today. Interesting stuff, from CSS scroll snapping to broader ES6 takeup. Kudos to Max for pulling all of this stuff together—so much info!</p>
<p>But aren’t we all just a-quiver about the newly-unveiled “Split View” in Safari:</p>
<blockquote>
<p>On newer iPads, you can upgrade Side View to Split View where two apps share the screen working simultaneously.</p>
</blockquote>
<p>There are a bunch of geometric flavors of this: 1/3 of the screen, 1/2, 2/3. This has major implications for responsive design!, people shout.</p>
<p><em>Except it doesn’t</em>, in my book.</p>
<p>There’s been a voyeuristic flocking to <a href="https://twitter.com/firt">@firt’s</a> (<em>quite</em> well-done) dimension porn image:</p>
<p><img src="ios9rwd.png" alt="Image copyright Maximilian Firtman @firt, used with permission: viewport dimensions in iOS 9 Safari split view on iPad"></p>
<p><em>(Thanks to @firt for permission to use this image from his <a href="http://www.mobilexweb.com/blog/ios9-safari-for-web-developers">original post</a>)</em></p>
<p>And then we fall into a trap: <em>what media queries do I need to target all of those variants?</em> <em>What are the pixel dimensions of each viewport possibility?</em> <em>This changes everything! So much more work now!</em></p>
<p>Let’s reassess. Please.</p>
<p>This situation highlights the import of designing along a continuum, not along rigid particular breakpoints (with, what, windy, desolate, rocky, broken wilderness between them?). Let the content flow like water from a mobile- or content-first baseline design into the spaces of the viewport as it morphs. This sounds a little bit woo-woo, but I swear, in general, <em>it works</em>.</p>
<p>Thinking about proportions and shapes is fine. But when we try to canonize a set of specific pixel-based media queries (ever-expanding as viewport possibilities flourish) we’re inadvertently committing ourselves to a kind of arms race that hearkens back to <code>User-Agent</code> sniffing.</p>
<p>I don’t mean to understate the complexity of web design in our current device reality—yeah, it’s challenging. But it doesn’t have to be hard <em>in this way</em>. The number of adjustments I anticipate having to make to my site to make it look good in these new dimensions? Approximately zero. I’ve already tried to account for the continuum. (Disclaimer: I’m no designer. My version of “looks okay” across viewport sizes may not exactly be world-class.).</p>
<p>If there’s any fragmentation here with respect to responsive web design, we’re doing it to ourselves. Take a deep breath and let yourself free from the pixel bounds of each viewport out there…isn’t that a little better?</p>
]]></description><link>http://www.lyza.com/2015/09/17/the-proper-response-to-ios-safari-split-view-is-not-a-bunch-of-bean-counting-pixel-math/</link><guid isPermaLink="true">http://www.lyza.com/2015/09/17/the-proper-response-to-ios-safari-split-view-is-not-a-bunch-of-bean-counting-pixel-math/</guid><category><![CDATA[tech]]></category><category><![CDATA[web]]></category><category><![CDATA[rwd]]></category><pubDate>Thu, 17 Sep 2015 17:21:11 GMT</pubDate></item><item><title><![CDATA[ARIA Landmark Roles in 5 Minutes]]></title><description><![CDATA[<p>The recent results for <a href="http://webaim.org/projects/screenreadersurvey6/">WebAIM’s survey study</a> of screen reader users reminded me of two things:</p>
<ul>
<li>Much of what stands between us and an accessible Web boils down to <a href="http://webaim.org/projects/screenreadersurvey6/#reasons">our own awareness and knowledge</a> as web implementors</li>
<li>A majority of screen reader users <a href="http://webaim.org/projects/screenreadersurvey6/#landmarks">rely on ARIA landmark roles</a> for basic navigation and wayfinding in web documents</li>
</ul>
<p>Paraphrased: <em>Web accessibility is a complex subject, but using ARIA landmark roles alone can give us a good start</em>.</p>
<h2 id="aria-s-roles-model">ARIA’s Roles Model</h2>
<p><a href="http://www.w3.org/WAI/intro/aria.php">WAI-ARIA</a> (Web Accessibility Initiative’s Accessible Rich Internet Applications Suite, whew) “provides a framework for adding attributes to identify features for user interaction, how they relate to each other, and their current state.” I’m not going to delve into all of what it encompasses because that is a lot.</p>
<p>Let’s just talk about roles for now. Using the <code>role</code> attribute in an HTML element is a way of explicitly declaring what it does in the HTML document. What its purpose is. What it <em>means</em> in this great universe of web stuff. Like this:</p>
<pre><code class="lang-html">&lt;main <span class="hljs-attribute">role</span>=<span class="hljs-string">"main"</span>&gt;
&lt;nav <span class="hljs-attribute">role</span>=<span class="hljs-string">"navigation"</span>&gt;
</code></pre>
<h2 id="four-categories-of-role">Four Categories of Role</h2>
<p>There are a <a href="http://www.w3.org/TR/wai-aria/roles">lot of defined roles in ARIA</a>, meant for accomplishing different things. Let’s focus in further.</p>
<p>There are four categories of role:</p>
<ol>
<li><strong>abstract</strong>: which you can’t use directly anyway, so let’s plug our ears and move on</li>
<li><strong>widget</strong>: which you use if you’re building ARIA-enhanced “widgets”, we’re not today, so onward!</li>
<li><strong>document structure</strong>: “structures that organize content in a page”: useful, but, still, let us onward…</li>
<li><strong>landmark</strong>: “regions of the page intended as navigational landmarks”, ding ding ding! These are signposts we can easily add to each and every HTML document we make.</li>
</ol>
<h3 id="there-are-eight-landmark-roles">There are Eight Landmark Roles</h3>
<p>There are only eight (8) landmark roles to master. Fewer, really, because not all are applicable to all things:</p>
<ul>
<li><strong>application</strong>: Defines a “region declared as a web application” (versus a content-y web document). Puts certain screen readers in a particular application mode. Don’t use it unless you know what you’re doing.</li>
<li><strong>banner</strong>: A site-level region, typically including logo, headings.</li>
<li><strong>complementary</strong>: An area of content within a page that is <em>related</em> to the main content, but would stand alone separate from it.</li>
<li><strong>contentinfo</strong>: Typically contains metadata about the main document, with copyright info, utility links, etc. Typically assigned to a <code>footer</code> element in applied usage.</li>
<li><strong>form</strong>: What it sounds like. Opinions differ, but I consider <code>&lt;form role=&quot;form&quot;&gt;</code> to be redundant.</li>
<li><strong>main</strong>: The main content of the document.</li>
<li><strong>navigation</strong>: An element containing navigation, like you’d expect.</li>
<li><strong>search</strong>: An element containing search functionality.</li>
</ul>
<h3 id="four-essential-landmark-roles">Four Essential Landmark Roles</h3>
<p>I am of the opinion that you can get excellent bang for the accessibility-improvement buck by simply using the following four ARIA landmark roles in every HTML document you produce:</p>
<ul>
<li><strong>banner</strong>: Stick this role on the <code>&lt;header&gt;</code> or other element that wraps the masthead or main banner of the page. Done.</li>
<li><strong>main</strong>: Put this role on the element containing the main, <em>unique</em> content of the page. That might be an article or blog post, for example. In writing this post I realized that my <code>main</code> role was poorly assigned on my site’s templates. It’ll be fixed by the time you see this.</li>
<li><strong>contentinfo</strong>: Stick it on your main site footer.</li>
<li><strong>navigation</strong>: Stick it on your navigation elements.</li>
</ul>
<p>With the exception of <code>navigation</code>, each of these roles should appear <em>only once per document</em>.</p>
<h3 id="am-i-doing-it-right-">Am I doing it right?</h3>
<p>Go grab the <a href="http://khan.github.io/tota11y/">tota11y</a> toolkit and quickly check any page. It has a section for <code>Landmarks</code>. Easy peasy!</p>
<p>p.s.: This isn’t the <a href="http://alistapart.com/column/wai-finding-with-aria-landmark-roles">first I’ve spoken of this</a>.</p>
]]></description><link>http://www.lyza.com/2015/09/04/aria-landmark-roles-in-5-minutes/</link><guid isPermaLink="true">http://www.lyza.com/2015/09/04/aria-landmark-roles-in-5-minutes/</guid><category><![CDATA[tech]]></category><category><![CDATA[a11y]]></category><category><![CDATA[web]]></category><category><![CDATA[howto]]></category><pubDate>Fri, 04 Sep 2015 20:13:17 GMT</pubDate></item><item><title><![CDATA[Time for a New Project]]></title><description><![CDATA[<p>It’s an awkward time of the year. People with little ones are pushing them back toward school buses. The weather is doing something transitional. Vim held strong when entering the season faded into a mild flatness by the end of it.</p>
<h2 id="a-quick-summer-retrospective">A Quick Summer Retrospective</h2>
<p>July and August were cerebral for me. I managed to ship <a href="https://www.youtube.com/watch?v=cz6EUrXizXo">my video about life and springtime</a>, I read a dozen or so books, and, ultimately, coded <a href="http://www.lyza.com">this site</a> from scratch, but I’m left feeling as if I have little of interest to show to anyone outside of my own head.</p>
<h2 id="and-now-for-something-completely-different-">And Now for Something…Completely Different?</h2>
<p>It’s time for something new, something forward. I’ve been on a hobby moratorium for a few years, out of guilt for my languishing pre-existing ones, but maybe it’s time to shrug off that mantle and get excited about something new. Any ideas?</p>
]]></description><link>http://www.lyza.com/2015/09/02/time-for-a-new-project/</link><guid isPermaLink="true">http://www.lyza.com/2015/09/02/time-for-a-new-project/</guid><category><![CDATA[projects]]></category><category><![CDATA[life]]></category><pubDate>Wed, 02 Sep 2015 17:24:37 GMT</pubDate></item><item><title><![CDATA[Lyza&#8217;s Index: Alaska Edition]]></title><description><![CDATA[<p>Last weekend, I went to Alaska. I don’t know why it took me so long—it’s been almost five years since I went to my last new state (Hawaii). In fact, Alaska makes a cool 50—I’ve been to ‘em all now.</p>
<h3 id="sea-canaries">Sea canaries</h3>
<p>Turnagain Arm is a dead-end, long finger of sea extending eastward from Anchorage off of Cook Inlet. We drove around it to get to the Kenai Peninsula.</p>
<p>Cook Inlet—including Turnagain Arm—has a population of Beluga whales. Most of the world’s population of Belugas is more arctic, and the Cook Inlet Belugas are genetically isolated. DNA suggests no inter-breeding with other Belugas for something like 6000 years. Unfortunately, about half of the Cook Inlet Belugas died off mysteriously in the 1990s and the herd (pod?) is still struggling to slowly re-establish itself. So I feel doubly lucky that I was able to spot a few, just white humps, out in the water on this trip. Who knows how long they’ll be around? (Source for this: various interpretive signs at Beluga Point and Bird Point along the Seward Highway. I have a generally-reliable memory, but this is non-robust, source-wise).</p>
<p>Belugas are one of my favorite whales (perhaps only beaten out by narwhals, which are amazing). They have this lovely demeanor and they look like they’d be good friends. I <a href="https://en.wikipedia.org/wiki/Beluga_whale">learned by watching Wikipedia</a> that they are sometimes called <em>Sea Canaries</em> because of their “high-pitched twitter”. And also, through associated Wiki-drift, that echolocation and such elaborate chatter are restricted to whales that have teeth (Odontoceti).</p>
<h3 id="other-things-waterbound">Other Things Waterbound</h3>
<p>We also saw a sea otter in the harbor at Seward. I’ve been reading <a href="http://www.amazon.com/Alaska-Novel-James-A-Michener/dp/037576142X">James Michener’s <em>Alaska</em></a>, which has a goodly amount to say about sea otters, so I wasn’t taken by surprise by how big she or he was. He or she was big! And relaxed, swimming on his/her back and grooming and pausing to let us take photos and video. Did you know that sea otters have the densest fur of any animal? (Both roadsign park signs <em>and</em> <a href="https://en.wikipedia.org/wiki/Sea_otter">Wikipedia</a> agree on that <em>so it must be true</em>.)</p>
<p>Late August is spawning season for silver salmon on the Kenai peninsula, and we timidly peered into solid creeks of flipping, disintegrating fish, nervously scanning around for salmon-keen bears.</p>
<p>We were ill-timed (being mid-moon-cycle) and so weren’t able to see the legendary <a href="http://www.alaska.org/advice/alaska-bore-tide">bore tide in Turnagain Arm</a>, but I, fascinated with tides in general, console myself by the claim that (from highway signs!) the bore tide hasn’t been nearly as amazing since the 1964 Good Friday earthquake dropped the entire arm’s seafloor by about six feet. The magnitude-9.3 quake put a number of communities (Portage, Girdwood, Hope) partially or completely under flood. They moved Girdwood up the mountain a couple of miles. They gave up on Portage entirely. Hope starts further inland now, the former water-frontage streets now part of the sea.</p>
<h3 id="late-summer-trip-perks">Late-summer Trip Perks</h3>
<p>Flights and crowds in Alaska in the summer are usually painfully expensive and painfully present, respectively. However, we seem to have found a loophole. Maybe it was fare wars between Alaska Airlines and JetBlue, but round-trip flights in August to Anchorage from Portland could be had for as little as $157. And since we opted to camp, Anchorage’s seizure-inducing lodging prices were mostly avoided other than the $275 or so we had to drop on an airport Holiday Inn Express because our flight (cheap, but…) landed at 2:00 AM. The return flight was also oddly-timed, leaving at nearly 1:00 AM, but on the flip side, I got to stare, ecstatic, at 90 minutes or the northern lights through my window, pale green and beautiful.</p>
<p>I recommend visiting this part of Alaska in late August—it’s still summer, but the locals are all starting to talk about how winter is coming. The aspens are just starting to go gold (though the alders are still summer-leafed) and the crowds seem to have tapered a little. I’d also like to tout that I didn’t get a single bug bite—another benefit of the later season. Camping on the Kenai is pleasant and easy, not bush wilderness but accessible landscape, landscape far bigger than average.</p>
]]></description><link>http://www.lyza.com/2015/08/30/lyzas-index-alaska-edition/</link><guid isPermaLink="true">http://www.lyza.com/2015/08/30/lyzas-index-alaska-edition/</guid><category><![CDATA[life]]></category><category><![CDATA[til]]></category><pubDate>Sun, 30 Aug 2015 20:34:23 GMT</pubDate></item><item><title><![CDATA[A Bad Question to ask a Developer]]></title><description><![CDATA[<p>There’s this terrible question. I didn’t stop to notice how terrible it was until lately, when I was at the receiving end of it at a particularly clenchy moment.</p>
<blockquote>
<p>Why didn’t you just use [fill in the blank with some specific technology or framework or pattern]?</p>
</blockquote>
<h3 id="the-genesis-of-the-terrible-question">The genesis of the terrible question</h3>
<p>It’s so easy to get to this question. A colleague or friend starts unrolling a  story at you: “I spent all day ramming my head against this CORS issue” or “I could <em>not</em> for the life of me figure out how write a test for this thing” or “I was trying to do this thing with <code>flexbox</code> and…world of pain.”</p>
<p>You’ve already been there; you’ve already suffered this specific grief. Or, lucky you, you chanced to learn of a solution to the grief in <em>advance</em> of the first time you got whacked with it. You already know a safe path out of the wilderness in question.</p>
<p>In any case, you, at this time of hearing your cohort’s misery, forget momentarily how much your own journey through the same wicked forest hurt. Or you underrate how lucky you were to know how to skirt the wicked forest safely in advance of its clutches. Because this is all behind you, you have an empathy glitch and you say:</p>
<blockquote>
<p>Why didn’t you just use blah with your <code>Access-Control-Allow-Origin</code> headers blah blah blah?</p>
</blockquote>
<p>or</p>
<blockquote>
<p>Why didn’t you just use fake test timers in <code>sinon.js</code>?</p>
</blockquote>
<p>or</p>
<blockquote>
<p>Why didn’t you just use whatever blah polyfill?</p>
</blockquote>
<h3 id="why-this-question-is-never-useful">Why this question is never useful</h3>
<p>I think we mean well. We want to share our battle-worn knowledge. When we say <em>just</em> it also has the connotation of “I assume you already know about this thing we both use in our shared livelihoods…why didn’t you <em>just</em> use it?”</p>
<p>First problem: the battle you’re critiquing is in the past. Your colleague has already fought it. And come out the other side with some resolution of how she or he subdued the beast in some way. Suggesting an alternate solution is relatively moot.</p>
<p>It also presumes that you have consummate understanding of the whole problem and the surrounding ecosystem. Maybe you don’t.</p>
<p>But my frowny issue with this phrase primarily centers around the wretched word <em>just</em>. O! <em>Just</em>. Perpetrator of so much evasion English, stabber of cruel clauses.</p>
<p><em>Just</em> belittles the original problem, shrinks the monster. It presumes the conflict to be trivial and petty. It casts the person on the listening end as inferior, ignorant or both.</p>
<p>This is a question that’s easy to trip into naturally, but should be avoided.</p>
]]></description><link>http://www.lyza.com/2015/08/18/a-bad-question-to-ask-a-developer/</link><guid isPermaLink="true">http://www.lyza.com/2015/08/18/a-bad-question-to-ask-a-developer/</guid><category><![CDATA[tech]]></category><category><![CDATA[teams]]></category><pubDate>Wed, 19 Aug 2015 06:05:06 GMT</pubDate></item><item><title><![CDATA[My Personal Kryptonite: JavaScript Bundlers]]></title><description><![CDATA[<p>Months and seasons have technical themes, and one of mine right now is about JavaScript bundlers—that is, tools for packaging JavaScript for use in the client (you know: browser) and handling dependencies for us.</p>
<p>I have had some slides in some recent talks that are especially popular, as I mentioned in my <a href="http://alistapart.com/column/the-tedium-of-managing-code">recent column on <em>A List Apart</em></a> about this subject. And when I say <em>popular</em>, I mean, they spurred a raucous round of groaning and cheering. I imagine this sound rush:</p>
<audio src="http://responsiveconf.com.s3.amazonaws.com/2015/audio/14-lyza-gardner-responsiveconf2015.mp3#t=597" controls><a href="https://huffduffer.com/adactio/243779">Listen to Responsive Day Out 3: Lyza Gardner</a></audio>

<p> marks that moment when a bunch of people in the audience realized: <em>Aha, it’s not just hard for <strong>me</strong>. This is a shared suck.</em></p>
<p>A number of times recently, I have thought, OK, this is the time. I’m going to sit down and spend a while delving into the problem set of managing dependencies and packaging code and understand the not just the differences between module schemes—which in large part I do, on a syntactic, get-it-done level—but the differences in philosophies and how we got to where we are, and with luck, maybe understand why where we got is so tedious and challenging.</p>
<h3 id="the-problem-is-i-don-t-find-it-interesting">The problem is: I don’t find it interesting</h3>
<p>There are parts of this problem I find moderately <em>interesting</em>, but interesting in a momentary-eyebrow-raise way. Interesting in an academic sense. But the majority of it is, to me, boring. It’s hard to want to dig in and figure something out that bores the socks off of me. As I say in my slides, one of the greatest technical demotivators is when something is difficult and dull at the same time:</p>
<p><img src="generalist-01.jpg" alt="Where Motivation Goes to Die"></p>
<p>That intersection, for me, is where this stuff ends up:</p>
<p><img src="generalist-02.jpg" alt="The intersection of Boring and Hard"></p>
<h3 id="and-no-offense-to-the-tools">And no offense to the tools</h3>
<p>I’m not bashing the tools that do this work: they’re essential and, often, sort of quietly amazing. But it just seems so <em>hard</em> sometimes (maybe I’m a whining, lazy developer?) and there are so many options out there, some of which are pieces of the same puzzle and some of which are mutually incompatible:</p>
<p><img src="generalist-03.jpg" alt="Some of the tooling options"></p>
<h3 id="i-just-feel-so-dumb">I just feel so dumb</h3>
<p>When I embarked on creating these talks and the <em>ALA</em> column, I thought my frustration with using these tools lay in their complexity and the dryness of what they accomplish. Getting this stuff right <em>is</em> often complex, and I still feel like the task isn’t the most compelling, but I realized what actually <em>gets under my skin</em>.</p>
<p>This stuff makes me feel stupid.</p>
<p>When I spend a half an hour or more fighting a single transpiling error or a missing global, I start clenching and swearing. In my front-brain, I am angry for a weakness in a tool, a poorly-implemented wrapping node module, or the entire benighted ecosystem for its Byzantine smugness. That’s why I <em>think</em> I’m mad.</p>
<p>But I now suspect I’m more angry because I feel like a fool. I want to get my head around this stuff, I want to subdue it, prevail. Even if it isn’t <em>interesting</em>, the fact that it plays me for the fool puts me on a rampage. What’s in my head is <em>Why the hell can’t I figure this out? What the hell is wrong with me. I’m in the wrong industry.</em> What comes out of my mouth is: “Goddamit <a href="http://browserify.org">browserify</a>, why do you suck so hard?” Which of course it does not.</p>
<p><img src="generalist-04.jpg" alt="Really Boring Kryptonite"></p>
<p>So, yeah, it’s boring. But that <em>Kryptonite</em> part is relevant. That’s what kills me.</p>
<h3 id="how-about-something-constructive-">How about something constructive?</h3>
<p>I’ve recognized my ire, so I hope that gives me a path to some sort of healing process. I can sip some herbal tea or something. But concretely, there are a few resources that popped up in the past week that are directly and objectively helpful.</p>
<ul>
<li><a href="http://cloudfour.com">Cloud Four</a> developer <a href="http://lsh.io">Leander Harding</a> wrote a <a href="http://blog.cloudfour.com/module_bunders_part_1/">devilishly clever post</a>—the first in a series—about what a <em>module</em> actually is in the purview of bundlers.</li>
<li>I found <a href="http://reactkungfu.com/2015/07/the-hitchhikers-guide-to-modern-javascript-tooling/">this post about JavaScript tooling in general</a> on <a href="http://reactkungfu.com/">React Kung Fu</a> (it’s not specific to React) to be a breath of fresh air. I like the way it stands back and clearly defines terms we may be more at sea about than we realize.</li>
</ul>
]]></description><link>http://www.lyza.com/2015/08/14/my-personal-kryptonite-javascript-bundlers/</link><guid isPermaLink="true">http://www.lyza.com/2015/08/14/my-personal-kryptonite-javascript-bundlers/</guid><category><![CDATA[tech]]></category><category><![CDATA[javascript]]></category><pubDate>Sat, 15 Aug 2015 00:57:48 GMT</pubDate></item><item><title><![CDATA[Writing Tomorrow&#8217;s CSS Today]]></title><description><![CDATA[<p><a href="http://alistapart.com/column/what-will-save-us-from-the-dark-side-of-pre-processors">Whether or not I’m correct</a> in calling <a href="https://github.com/postcss/postcss">PostCSS</a> a CSS <em>post-processor</em> or not, that is, semantic arguments notwithstanding: I love the tool and its general promise and philosophy.</p>
<p>I use PostCSS as part of my workflow on this site. We use it copiously at <a href="http://www.cloudfour.com">Cloud Four</a>. One of the hints, to me, that it’s a nice fit is that both dev-y and design-y people seem to thrive in its world.</p>
<p>Here are a couple of specific CSS things I’ve been enjoying writing in my source lately.</p>
<h3 id="var-and-calc"><code>var</code> and <code>calc</code></h3>
<p>The combination of <code>calc</code> and <code>var</code> for basic computation, which is a large part of the draw of pre-processors like Sass, Less and stylus. I make use of the <code>:root</code> selector as a place to stash my variables, for example:</p>
<pre><code class="lang-css"><span class="hljs-selector-pseudo">:root</span> {
  <span class="hljs-attribute">--ratio</span>: <span class="hljs-number">1.2</span>;
  <span class="hljs-attribute">--font-size-sm</span>: <span class="hljs-number">1em</span>;
  <span class="hljs-attribute">--font-size-md</span>: <span class="hljs-built_in">calc</span>(var(--font-size-sm) * <span class="hljs-built_in">var</span>(--ratio));
  <span class="hljs-comment">/* ... and so on, font and heading sizes up to xxl */</span>
}
</code></pre>
<p>The above is an abbreviated riff on a pattern established by Cloud Four’s Erik Jung, who is a master at typographic thinking. But note how I can chain along defined variables and calcs to create a rhythmic relationship of type. The value of <code>ratio</code> is also used to calculate ideal <code>line-height</code>. It’s used in this site’s source.</p>
<p>This is valid CSS per the <a href="http://www.w3.org/TR/css-variables/">CSS Custom Properties for Cascading Variables Module Level 1</a> (I call it “CSS Variables” because <em>mouthful</em>). But you won’t see it in my site’s source untrammeled because PostCSS transpiles it to the kind of CSS browsers of this day and age can handle.</p>
<h3 id="custom-selectors">Custom Selectors</h3>
<p>Used sparingly, things like this are self-evidently useful:</p>
<pre><code class="lang-css">@<span class="hljs-keyword">custom</span>-<span class="hljs-keyword">selector</span> :--headings h1, h2, h3, h4, h5, h6;
<span class="hljs-comment">/* ...later on */</span>
<span class="hljs-selector-pseudo">:--headings</span> {
  <span class="hljs-attribute">color</span>: <span class="hljs-built_in">var</span>(--heading-color);
  <span class="hljs-attribute">font</span>: <span class="hljs-built_in">var</span>(--heading-font);
  <span class="hljs-attribute">font-weight</span>: <span class="hljs-built_in">var</span>(--font-weight);
  <span class="hljs-attribute">line-height</span>: <span class="hljs-number">1</span>;
}
</code></pre>
<p>Like with CSS variables, the spec is called something different: <a href="http://tabatkins.github.io/specs/css-aliases/">CSS Aliases</a>.</p>
<h3 id="custom-media-queries">Custom Media Queries</h3>
<p>And how:</p>
<pre><code class="lang-css">@<span class="hljs-keyword">custom</span>-<span class="hljs-keyword">media</span> --sm-viewport (width &gt;= <span class="hljs-number">30em</span>);
<span class="hljs-comment">/* ... and later ... */</span>
@<span class="hljs-keyword">media</span> (--sm-viewport) {
  <span class="hljs-selector-class">.Announcement</span> {
    <span class="hljs-attribute">padding</span>: <span class="hljs-built_in">var</span>(--space-xsm);
    <span class="hljs-attribute">margin</span>: <span class="hljs-built_in">var</span>(--space-md) <span class="hljs-built_in">var</span>(--space-sm);
  }
}
</code></pre>
<p>This is per the <a href="https://drafts.csswg.org/mediaqueries/#custom-mq">custom media queries</a> part of the <a href="https://drafts.csswg.org/mediaqueries/">Media Queries Level 4</a> spec.</p>
<p>Next time I’ll natter on about how adding <a href="https://suitcss.github.io/">Suit CSS</a> to this mix makes extra magic sauce.</p>
]]></description><link>http://www.lyza.com/2015/08/11/writing-tomorrows-css-today/</link><guid isPermaLink="true">http://www.lyza.com/2015/08/11/writing-tomorrows-css-today/</guid><category><![CDATA[tech]]></category><category><![CDATA[standards]]></category><category><![CDATA[site]]></category><pubDate>Tue, 11 Aug 2015 17:22:29 GMT</pubDate></item><item><title><![CDATA[Video from Responsive Day Out 3]]></title><description><![CDATA[<p><a href="http://www.responsiveconf.com">Responsive Day Out 3</a> in Brighton in June was all sorts of a blast. Lovely weather, nice folks, and the event was crammed with nice talks.</p>
]]></description><link>http://www.lyza.com/2015/07/31/video-from-responsive-day-out-3/</link><guid isPermaLink="true">http://www.lyza.com/2015/07/31/video-from-responsive-day-out-3/</guid><category><![CDATA[work]]></category><category><![CDATA[tech]]></category><category><![CDATA[events]]></category><category><![CDATA[speaking]]></category><pubDate>Sat, 01 Aug 2015 03:04:05 GMT</pubDate></item><item><title><![CDATA[Lyza&#8217;s Index: July 30]]></title><description><![CDATA[<ul>
<li><a href="https://en.wikipedia.org/wiki/Aerogel">Aerogel</a> is so not-dense that it’s hard to see the edges of it, which tend to diffuse into nothingness subtly. (for more, read: <a href="http://www.amazon.com/Stuff-Matters-Exploring-Marvelous-Materials/dp/0544236041"><em>Stuff Matters: Exploring the Marvelous Materials that Shape our Man-Made World</em></a> )</li>
<li>In Naples, there are DOC-designated pizzas. If you make a margherita pizza with the wrong kind of tomatoes or mozzarella, you’re not in the club.</li>
<li>Perhaps Charles Lindbergh’s greatest feat in his first transatlantic flight was that he found the airfield in Paris after flying from New York using <em>dead reckoning</em>. Imagine that. (for more, read: <a href="http://www.amazon.com/One-Summer-America-Bill-Bryson-ebook/dp/B00C8S9VKM/ref=sr_1_4?s=books&amp;ie=UTF8&amp;qid=1438297354&amp;sr=1-4&amp;keywords=bill+bryson"><em>One Summer: America, 1927</em></a> )</li>
</ul>
<p>The following is nifty ES6/JS 2015 goodness:</p>
<pre><code class="lang-javascript"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Whatever</span> </span>{
  <span class="hljs-keyword">constructor</span>({
    foo = <span class="hljs-string">'bar'</span>,
    baz = <span class="hljs-string">'bing'</span>
  } = {}) {
    <span class="hljs-comment">// Yeah, baby</span>
    <span class="hljs-built_in">console</span>.log(foo); <span class="hljs-comment">// =&gt; 'bar' by default</span>
  }
}
</code></pre>
<p>Hat-tip to <a href="https://twitter.com/tylersticka">@tylersticka</a> on that one!</p>
]]></description><link>http://www.lyza.com/2015/07/30/lyzas-index-july-30/</link><guid isPermaLink="true">http://www.lyza.com/2015/07/30/lyzas-index-july-30/</guid><category><![CDATA[life]]></category><category><![CDATA[til]]></category><pubDate>Thu, 30 Jul 2015 23:12:59 GMT</pubDate></item><item><title><![CDATA[Unafraid of Times New Roman]]></title><description><![CDATA[<p>I have a thing for Caslon. Not just because of the old printers’ adage (“When in doubt, use Caslon”), but for two other reasons:</p>
<ul>
<li>I love the italic ampersand and discretionary ligatures in Adobe Caslon Pro so much it makes my skin hurt to think about it, and:</li>
<li>Caslon is the font, that, in real physical form, I have the most of—several runs of metal type from the <a href="http://www.arionpress.com/mandh/">M&amp;H Foundry</a> in the Presidio in San Francisco, including an unusual 12-on-14 size.</li>
</ul>
<p>When I first started deciding I needed a new website, which was, oh, about three decades ago, the only thing I thought was sorted was that, come hell or tsunami, I was going to use the hell out of Adobe Caslon Pro. Font payload be damned—I was willing to forego other bits and flair to make room in my performance budget. It was a lot of bytes, though, to get all the weights I needed (<em>needed</em>, see?). I was saddled with guilt.</p>
<p>Adobe, however, made this easier for me. They moved most of the useful weights of Adobe Caslon Pro into a higher price tier than I was willing to pay for on Typekit.</p>
<p>Then I found Playfair, the heading font on this site, and was irrevocably smitten. I switched horses to Google fonts. But whatever was I to do with my body text?</p>
<p>I spent a few hours squinting at the combinations of Playfair-Slabo, Playfair-Quattrocento, Playfair-Crimson Text, and so on. Between each test pairing the site would appear to me without web fonts, and then I realized, holy hell, Times New Roman looks perfectly <em>fine</em>. <em>Good</em>, even. What the hell was I doing?</p>
<p>Enjoy the lighter weight of not having to download another font that isn’t any better than what you have available already on your system! I almost let myself get carried away with the fripperies and baubles of pretty custom fonts. I caught myself in time.</p>
]]></description><link>http://www.lyza.com/2015/07/29/i-am-unafraid-of-times-new-roman/</link><guid isPermaLink="true">http://www.lyza.com/2015/07/29/i-am-unafraid-of-times-new-roman/</guid><category><![CDATA[site]]></category><category><![CDATA[tech]]></category><pubDate>Wed, 29 Jul 2015 21:52:27 GMT</pubDate></item><item><title><![CDATA[The Rajneeshees: Another Sign I am a Portland Native]]></title><description><![CDATA[<p>My co-workers highlighted <a href="http://digg.com/video/rajneeshee-bioterror-attack-dalles-oregon-taco-time-salsa">this recent video on digg</a>, part of a series entitled “Atlas Obscura” (thus, presumably denoting its informational contents are, well, obscure), about the salad-bar poisoning by the Rajneeshees in The Dalles, Oregon in 1984.</p>
<p>Except this information, to me, is anything but obscure. In my memory, the Rajneesh situation flavored several years of Oregon culture and news reporting. My mom still occasionally references it in casual conversation.</p>
<p>It made me curious: How many people know of this event? Is it really so banished to the obscure edges of history? Is it just a sign that I’m getting old, and/or that I am hopelessly <em>from Oregon</em> in that entrenched way? Do I already sound like I’m my porch rocking chair, creaking on about how <em>In my day, cults poisoned salad bars?</em></p>
]]></description><link>http://www.lyza.com/2015/07/28/the-rajneeshees-another-sign-i-am-a-portland-native/</link><guid isPermaLink="true">http://www.lyza.com/2015/07/28/the-rajneeshees-another-sign-i-am-a-portland-native/</guid><category><![CDATA[oregon]]></category><category><![CDATA[life]]></category><pubDate>Tue, 28 Jul 2015 18:45:01 GMT</pubDate></item><item><title><![CDATA[Edge Conf London, June 2015]]></title><description><![CDATA[<p>Last month I had the honor of moderating the <a href="https://docs.google.com/document/d/1aSjbz1A2ifV5Xu-pYx-SGiweaihwZ74R79PXeAJxJh8/edit">progressive enhancement panel</a> at <a href="https://edgeconf.com/2015-london">Edge Conf</a> in London. Also: sweating and trying to look like I’m really OK despite the failure of the air conditioning at Facebook’s glass-lined beautiful fishtank—I failed, to wit:</p>
<p><img src="https://edgeconf.com/images/events/2015-london/photos/EdgeConf2105-129.jpg" alt="I don&#39;t photograph well on stage, ever"></p>
<h2 id="edge-conf-is-one-of-my-very-fave-conferences">Edge Conf is one of my very fave conferences</h2>
<p>I shall give you some brief bullets as to the why:</p>
<ul>
<li>Everyone who is there is, or definitely is encouraged to be, involved. Moderators are expected to try to include as many audience comments in the discussion as possible. The audience is like an extension of the panel itself. As such, the collection of talent in the room is, amazing, and also, ah, intimidating.</li>
<li>This isn’t just a bunch of folks sitting on stage winging it and bloviating. Preparation is almost extreme, but I mean that in a good way. Questions submitted by the community are vetted, morphed, and arranged into conversation-provoking continuity—almost a narrative of connected questions.</li>
<li>Things are <em>dense</em>: there’s a fast-paced back-channel (this time it was Slack) and moderators have to keep questions and answers and comments to very particular short time. This latter thing is for the greater good, and, in my opinion, helps to make the event pithy and focused.</li>
</ul>
<p>I’m late on this. There’s already been much super coverage from <a href="https://adactio.com/journal/9195">Jeremy</a> and <a href="https://dev.opera.com/blog/js-open-day-edge-conf/">Andreas</a> and  <a href="http://words.tofumatt.com/2015/07/16/edgeconf-2015-london/">Matthew</a> among many others.</p>
<p>Video coverage is up; here’s my session specifically but you can find <a href="https://edgeconf.com/2015-london">all of ‘em on the Edge Conf site</a>.</p>
<iframe src="https://www.youtube.com/embed/lDNKs_6ptss?rel=0" frameborder="0" allowfullscreen></iframe>
]]></description><link>http://www.lyza.com/2015/07/26/edge-conf-london-june-2015/</link><guid isPermaLink="true">http://www.lyza.com/2015/07/26/edge-conf-london-june-2015/</guid><category><![CDATA[tech]]></category><category><![CDATA[standards]]></category><category><![CDATA[events]]></category><pubDate>Mon, 27 Jul 2015 01:05:34 GMT</pubDate></item></channel></rss>